import os
import logging
import telebot
from storage.db_session import DBSession
from storage.user_storage import UserStorage
from models.user import User
from config import TG_API_KEY, SQL_DATA
import sqlite3



# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


def main():
    try:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ë–î
        if os.path.exists(SQL_DATA["db_path"]):
            try:
                os.remove(SQL_DATA["db_path"])
                print("–£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –ë–î")
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ë–î: {e}")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î (—Å–æ–∑–¥–∞—Å—Ç —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ)
        db = DBSession()

        # –Ø–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
        with db.get_session() as conn:
            tables = conn.execute("SELECT name FROM sqlite_master WHERE type='table'").fetchall()
            print(f"–¢–∞–±–ª–∏—Ü—ã –≤ –ë–î: {[t[0] for t in tables]}")

            # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–∞–±–ª–∏—Ü - —Å–æ–∑–¥–∞–µ–º –∑–∞–Ω–æ–≤–æ
            if not tables:
                db._init_tables()
                print("–¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ")

        # –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞...
        user_storage = UserStorage(db, SQL_DATA)
        bot = telebot.TeleBot(TG_API_KEY)

        @bot.message_handler(commands=['start'])
        def handle_start(message):
            try:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã users
                with db.get_session() as conn:
                    conn.execute("SELECT 1 FROM users LIMIT 1")

                user = user_storage.load_by_telegram_id(message.from_user.id)
                if not user:
                    new_user = User(
                        id=0,
                        telegram_id=message.from_user.id,
                        username=message.from_user.username or f"user_{message.from_user.id}"
                    )
                    user_storage.save(new_user)
                    user = user_storage.load_by_telegram_id(message.from_user.id)
                    bot.reply_to(message, f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! ID: {user.id}")
                else:
                    bot.reply_to(message, f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! ID: {user.id}")
            except sqlite3.OperationalError as e:
                print(f"–û—à–∏–±–∫–∞ —Ç–∞–±–ª–∏—Ü—ã users: {e}")
                bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ë–î. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞.")

        logger.info("Starting bot...")
        bot.infinity_polling()



    except Exception as e:
        print(f"Fatal error: {e}")
    finally:
        db.close()


if __name__ == "__main__":
    main()